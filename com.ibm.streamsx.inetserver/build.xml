<?xml version="1.0" encoding="UTF-8"?>
<!--
# Licensed Materials - Property of IBM
# Copyright IBM Corp. 2011, 2013, 2019
# US Government Users Restricted Rights - Use, duplication or
# disclosure restricted by GSA ADP Schedule Contract with
# IBM Corp.
-->

<!-- 
Found that if you built under Streams studio, *$StreamsModel.java
artifacts were left around and caused issues with the ant build.
-->

<project name="com.ibm.streamsx.inetserver" basedir="." default="all">

	<property environment="env" />
	<property name="streams.install"   value="${env.STREAMS_INSTALL}" />

	<property name="src.dir"        location="impl/java/src" />
	<property name="build.dir"      location="impl/java/classes" /> <!-- this is not included in sab by default, thus no .class files in sab -->
	<property name="gensrc.dir"     location="impl/java/src-gen" /> <!-- use a separate dir to avoid .java files in jar file -->
	<property name="impl.lib.dir"   location="impl/lib" /> <!-- used for the generated libs -->
	<property name="lib.dir"        location="lib" />      <!-- downloaded libs -->
	
	<property name="bin.dir"        location="impl/java/studio-build"/> <!-- streams studio bin dir / used only on clean target -->
	<property name="gensrc.dir2"    location="impl/java/src-gen2"/>     <!-- streams studio bin dir / used only on clean target -->
	<property name="out.dir"        location="output"/>                 <!-- streams studio bin dir / used only on clean target -->

	<property name="test.run.dir"   location="unittestrun" />
	<property name="test.build.dir" location="${test.run.dir}/bin" />
	<property name="downloads.dir"  location="opt/downloaded" /> <!-- used for cleanup only -->
	<property name="jarfile"        value="com.ibm.streamsx.inetserver.jar" />
	
	<property name="spl-mt"         value="${streams.install}/bin/spl-make-toolkit"/>

	<defaultexcludes add="**/.gitkeep"/>

	<path id="cp.streams">
		<pathelement location="${streams.install}/lib/com.ibm.streams.operator.samples.jar" />
	</path>

	<path id="cp.manifest">
		<fileset dir="opt">
			<include name="wssupport/Java-WebSocket-1.3.0.jar"/>
		</fileset>
		<fileset dir="${lib.dir}">
			<include name="*.jar"/>
		</fileset>
	</path>

	<path id="cp.compile">
		<path refid="cp.streams" />
		<path refid="cp.manifest" />
	</path>

	<target name="all" depends="toolkit" description="build all source components / compatibility target"/>

	<target name="init">
		<mkdir dir="${gensrc.dir}"/>
		<mkdir dir="${build.dir}"/>
		<mkdir dir="${impl.lib.dir}"/>
		<mkdir dir="${lib.dir}"/>
	</target>

	<target name="toolkit-clean" depends="clean-studio-artefacts"
		description="Clean up generated toolkit artifacts">
		<exec executable="${spl-mt}">
			<arg value="--directory"/>
			<arg value="${basedir}"/>
			<arg value="-c"/>
		</exec>
		<delete verbose="true">
			<!-- The fileset with the generated spl artifacts -->
			<fileset dir="${basedir}">
				<include name="com.ibm.streamsx.inet.rest/HTTPBLOBInjection/*"/>
				<include name="com.ibm.streamsx.inet.rest/HTTPJSONInjection/*"/>
				<include name="com.ibm.streamsx.inet.rest/HTTPTupleInjection/*"/>
				<include name="com.ibm.streamsx.inet.rest/HTTPRequestProcess/*"/>
				<include name="com.ibm.streamsx.inet.rest/HTTPTupleView/*"/>
				<include name="com.ibm.streamsx.inet.rest/HTTPXMLInjection/*"/>
				<include name="com.ibm.streamsx.inet.rest/HTTPXMLView/*"/>
				<include name="com.ibm.streamsx.inet.rest/WebContext/*"/>
				<include name="com.ibm.streamsx.inet.wsserver/WebSocketInject/*"/>
				<include name="com.ibm.streamsx.inet.wsserver/WebSocketSend/*"/>
			</fileset>
		</delete>
		<delete dir="${impl.lib.dir}"/>
		<delete dir="${build.dir}"/>
		<delete dir="${gensrc.dir}"/>
	</target>

	<target name="clean" depends="toolkit-clean, test-clean"
		description="Clean up generated toolkit artifacts and downloaded libraries and test artifacts">
		<delete dir="${lib.dir}"/>
		<delete dir="${downloads.dir}" />
		<delete dir="doc"/> <!-- delete old doc files -->
	</target>

	<!-- clean up the studio generated files to avoide duplicate warnings from spl-make-toolkit -->
	<target name="clean-studio-artefacts">
		<echo message="Clean all studio artifacts "/>
		<delete dir="${bin.dir}"/>
		<delete dir="${gensrc.dir2}"/>
		<delete dir="${out.dir}"/>
	</target>

	<target name="toolkit" depends="jar"
		description="Build the toolkit">
		<echo message="Tookit to index: ${basedir}"/>
		<exec executable="${spl-mt}" failonerror="true">
			<arg value="--directory"/>
			<arg value="${basedir}"/>
			<arg value="-m"/>
		</exec>
	</target>

	<target name="maven-deps" depends="init" if="env.M2_HOME"
		description="Download required libraries using maven">
		<fail unless="env.M2_HOME" message="Environment variable M2_HOME not set. Please set this to point to the path of maven home directory"/>
		<property name="maven.bin" value="${env.M2_HOME}/bin/mvn"/>
		<available property="pomset" file="${basedir}/pom.xml"/>
		<fail unless="pomset" message="There must be a pom.xml file in com.ibm.streamsx.mail in order to use maven to download necessary dependencies."/> 
		<exec executable="${maven.bin}"  failonerror="true">
			<arg value="dependency:copy-dependencies"/>
			<arg value="-DoutputDirectory=${lib.dir}"/>
		</exec>
	</target>

	<target name="compile" depends="maven-deps"
		description="Compile the java source components">
		<javac srcdir="${src.dir}" destdir="${build.dir}" debug="true" includeantruntime="no"
			source="1.8" target="1.8"
			excludes="com/ibm/streamsx/inet/*/test/**">
			<classpath>
				<path refid="cp.compile" />
			</classpath>
			<compilerarg line="-s ${gensrc.dir}"/>
			<!-- <compilerarg line="-Xlint:unchecked"/> -->
		</javac>
	</target>

	<target name="jar" depends="compile"
		description="Generate the java library">
		<manifestclasspath property="jar.cp.manifest" jarfile="${impl.lib.dir}/${jarfile}">
			<classpath refid="cp.manifest" />
		</manifestclasspath>
		<jar destfile="${impl.lib.dir}/${jarfile}" filesonly="true">
			<fileset dir="${build.dir}" includes="com/ibm/streamsx/inet/**"/>
			<fileset dir="${src.dir}" includes="com/ibm/streamsx/inet/messages/*.properties"/>
			<manifest>
				<attribute name="Class-Path" value="${jar.cp.manifest}" />
			</manifest>
		</jar>
		<!-- <delete dir="${build.dir}" /> do not delete classes to enable incremental build -->
	</target>

	<!-- assumes Junit 4.3 (or later) is in $HOME/.ant/lib -->
	<target name="test" depends="jar"
		description="Execute the integrated unit tests">
		<mkdir dir="${test.run.dir}" />
		<mkdir dir="${test.build.dir}" />

		<javac srcdir="${src.dir}" destdir="${test.build.dir}" debug="true" includeantruntime="yes" includes="com/ibm/streamsx/inet/*/test/**">
			<classpath>
				<pathelement location="${impl.lib.dir}/${jarfile}" />
				<path refid="cp.streams" />
			</classpath>
		</javac>

		<junit printsummary="yes" haltonfailure="yes" fork="yes">
			<classpath>
				<pathelement location="${test.build.dir}" />
				<pathelement location="${impl.lib.dir}/${jarfile}" />
				<path refid="cp.streams" />
			</classpath>

			<formatter type="xml" />

			<batchtest todir="${test.run.dir}">
				<fileset dir="${src.dir}">
					<include name="**/*Test.java" />
				</fileset>
			</batchtest>
		</junit>
		<!-- <junitreport todir="${test.run.dir}">
			<fileset dir="${test.run.dir}">
				<include name="TEST-*.xml"/>
			</fileset>
			<report format="frames" todir="${test.run.dir}/html"/>
		</junitreport> -->
	</target>

	<target name="test-clean" description="Clean generated test artifacts">
		<delete dir="${test.run.dir}" />
		<delete dir="${test.build.dir}" />
	</target>
</project>

